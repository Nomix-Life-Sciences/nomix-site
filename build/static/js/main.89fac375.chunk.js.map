{"version":3,"sources":["images/nomix-logo-02.png","components/VariantSelector.js","components/Product.js","components/LineItem.js","components/Cart.js","components/CustomerAuth.js","components/SectionComponents/WhoWeAre.js","components/SectionComponents/HowItWorks.js","components/Partners/Partners.js","components/Footer/Footer.js","App.js","ShopifyClient.js","Product.js","components/Header/Header.js","checkout.js","Shop.js","serviceWorker.js","pages/About.js","index.js"],"names":["module","exports","VariantSelector","className","name","this","props","option","key","onChange","handleOptionChange","values","map","value","Component","Product","state","selectedOptions","bind","handleQuantityChange","findImage","product","options","forEach","selector","setState","prevState","images","variantId","primary","filter","image","variant_ids","includes","src","event","target","selectedVariant","variants","edges","find","variant","node","every","selectedOption","selectedVariantImage","selectedVariantQuantity","variantImage","variantQuantity","id","toString","flexWrap","alignItems","width","px","title","price","min","type","defaultValue","onClick","addVariantToCart","length","alt","LineItem","decrementQuantity","incrementQuantity","lineItemId","updateLineItemInCart","line_item","quantity","toFixed","removeLineItemInCart","Cart","openCheckout","window","open","checkout","webUrl","line_items","lineItems","isCartOpen","handleCartClose","subtotalPrice","totalTax","totalPrice","CustomerAuth","email","password","nonFieldErrorMessage","emailErrorMessage","passwordErrorMessage","handleInputChange","createCustomerAccount","resetErrorMessages","resetInputFields","newCustomer","loginCustomerAccount","input","customerCreate","variables","then","res","data","customer","closeCustomerAuth","showAccountVerificationMessage","userErrors","error","field","message","customerAccessTokenCreate","customerAccessToken","associateCustomerCheckout","accessToken","isCustomerAuthOpen","placeholder","handleSubmit","gql","compose","graphql","WhoWeAre","items","wwa","class","getImageUrl","path","description","HowItWorks","frameBorder","Partners","Container","step","logo","Footer","howItWorksQuery","wwaQuery","partners","App","justifyContent","query","loading","getHowItWorks","repeater","getWhoWeAre","Button","href","getPartnerLogos","httpLink","createHttpLink","uri","middlewareLink","setContext","headers","shop","ApolloClient","link","concat","cache","InMemoryCache","productQuery","Header","Navbar","collapseOnSelect","bg","expand","fixed","Brand","Logo","Toggle","aria-controls","Collapse","Nav","Link","CheckoutFragment","createCheckout","checkoutLineItemsAdd","checkoutLineItemsUpdate","checkoutLineItemsRemove","checkoutCustomerAssociate","checkoutId","parseInt","handleCartOpen","lineItemIds","Shop","isNewCustomer","products","openCustomerAuth","checkoutCreate","getAttribute","accountVerificationMessage","setTimeout","AppWithDataAndMutation","Boolean","location","hostname","match","aboutQuery","About","getAboutPage","about","aboutTitle","aboutDescription","aboutImage","faq","my","faqDescription","link1","HttpLink","authorization","client2","client","ReactDOM","render","exact","document","getElementById"],"mappings":"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","file":"static/js/main.89fac375.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nomix-logo-02.0377547c.png\";","import React, {Component} from 'react';\n\nclass VariantSelector extends Component {\n  render() {\n    return (\n      <select\n        className=\"Product__option\"\n        name={this.props.option.name}\n        key={this.props.option.name}\n        onChange={this.props.handleOptionChange}\n      >\n        {this.props.option.values.map((value) => {\n          return (\n            <option value={value} key={`${this.props.option.name}-${value}`}>{`${value}`}</option>\n          )\n        })}\n      </select>\n    );\n  }\n}\n\nexport default VariantSelector;\n","import React, { Component } from \"react\";\nimport VariantSelector from \"./VariantSelector\";\nimport { Flex, Box } from \"@rebass/grid/emotion\";\n\nimport \"./product.scss\";\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedOptions: {}\n    };\n\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    this.handleQuantityChange = this.handleQuantityChange.bind(this);\n    this.findImage = this.findImage.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.product.options.forEach(selector => {\n      this.setState(prevState => ({\n        selectedOptions: {\n          ...prevState.selectedOptions,\n          [selector.name]: selector.values[0]\n        }\n      }));\n    });\n  }\n\n  findImage(images, variantId) {\n    const primary = images[0];\n\n    const image = images.filter(function(image) {\n      return image.variant_ids.includes(variantId);\n    })[0];\n\n    return (image || primary).src;\n  }\n\n  handleOptionChange(event) {\n    const target = event.target;\n    let selectedOptions = this.state.selectedOptions;\n    selectedOptions[target.name] = target.value;\n\n    const selectedVariant = this.props.product.variants.edges.find(variant => {\n      return variant.node.selectedOptions.every(selectedOption => {\n        return selectedOptions[selectedOption.name] === selectedOption.value;\n      });\n    }).node;\n\n    this.setState({\n      selectedVariant: selectedVariant,\n      selectedVariantImage: selectedVariant.image.src\n    });\n  }\n\n  handleQuantityChange(event) {\n    this.setState({\n      selectedVariantQuantity: event.target.value\n    });\n  }\n\n  render() {\n    let variantImage =\n      this.state.selectedVariantImage ||\n      this.props.product.images.edges[0].node.src;\n    let variant =\n      this.state.selectedVariant || this.props.product.variants.edges[0].node;\n    let variantQuantity = this.state.selectedVariantQuantity || 1;\n    let variant_selectors = this.props.product.options.map(option => {\n      return (\n        <VariantSelector\n          handleOptionChange={this.handleOptionChange}\n          key={option.id.toString()}\n          option={option}\n        />\n      );\n    });\n    return (\n      <div className=\"Product\">\n        <Flex\n          className=\"product-card\"\n          flexWrap=\"wrap-reverse\"\n          alignItems=\"center\"\n        >\n          <Box width={[1, 1 / 2]} px={2}>\n            <h5 className=\"Product__title\">{this.props.product.title}</h5>\n            <span className=\"Product__price\">${variant.price}</span>\n            <label className=\"Product__option\">\n              Quantity\n              <input\n                min=\"1\"\n                type=\"number\"\n                defaultValue={variantQuantity}\n                onChange={this.handleQuantityChange}\n              ></input>\n            </label>\n            <button\n              className=\"orderbutton\"\n              onClick={() =>\n                this.props.addVariantToCart(variant.id, variantQuantity)\n              }\n            >\n              <span> Add to Cart</span>\n            </button>\n          </Box>\n          <Box width={[1, 1 / 2]} px={2}>\n            {this.props.product.images.edges.length ? (\n              <img src={variantImage} alt={`${this.props.product.title}`} />\n            ) : null}\n          </Box>\n        </Flex>\n      </div>\n    );\n  }\n}\n\nexport default Product;\n","import React, {Component} from 'react';\n\nclass LineItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.decrementQuantity = this.decrementQuantity.bind(this);\n    this.incrementQuantity = this.incrementQuantity.bind(this);\n  }\n\n  decrementQuantity(lineItemId) {\n    this.props.updateLineItemInCart(lineItemId, this.props.line_item.quantity - 1)\n  }\n\n  incrementQuantity(lineItemId) {\n    this.props.updateLineItemInCart(lineItemId, this.props.line_item.quantity + 1)\n  }\n\n  render() {\n    return (\n      <li className=\"Line-item\">\n        <div className=\"Line-item__img\">\n          {this.props.line_item.variant.image ? <img src={this.props.line_item.variant.image.src} alt={`${this.props.line_item.title} product shot`}/> : null}\n        </div>\n        <div className=\"Line-item__content\">\n          <div className=\"Line-item__content-row\">\n            <div className=\"Line-item__variant-title\">\n              {this.props.line_item.variant.title}\n            </div>\n            <span className=\"Line-item__title\">\n              {this.props.line_item.title}\n            </span>\n          </div>\n          <div className=\"Line-item__content-row\">\n            <div className=\"Line-item__quantity-container\">\n              <button className=\"Line-item__quantity-update\" onClick={() => this.decrementQuantity(this.props.line_item.id)}>-</button>\n              <span className=\"Line-item__quantity\">{this.props.line_item.quantity}</span>\n              <button className=\"Line-item__quantity-update\" onClick={() => this.incrementQuantity(this.props.line_item.id)}>+</button>\n            </div>\n            <span className=\"Line-item__price\">\n              $ { (this.props.line_item.quantity * this.props.line_item.variant.price).toFixed(2) }\n            </span>\n            <button className=\"Line-item__remove\" onClick={()=> this.props.removeLineItemInCart(this.props.line_item.id)}>×</button>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default LineItem;\n","import React, {Component} from 'react';\nimport LineItem from './LineItem';\n\nclass Cart extends Component {\n  constructor(props) {\n  super(props);\n\n    this.openCheckout = this.openCheckout.bind(this);\n  }\n\n  openCheckout() {\n    window.open(this.props.checkout.webUrl);\n  }\n\n  render() {\n    let line_items = this.props.checkout.lineItems.edges.map((line_item) => {\n      return (\n        <LineItem\n          removeLineItemInCart={this.props.removeLineItemInCart}\n          updateLineItemInCart={this.props.updateLineItemInCart}\n          key={line_item.node.id.toString()}\n          line_item={line_item.node}\n        />\n      );\n    });\n\n    return (\n      <div className={`Cart ${this.props.isCartOpen ? 'Cart--open' : ''}`}>\n        <header className=\"Cart__header\">\n          <h2>Cart</h2>\n          <button\n            onClick={this.props.handleCartClose}\n            className=\"Cart__close\">\n            ×\n          </button>\n        </header>\n        <ul className=\"Cart__line-items\">\n          {line_items}\n        </ul>\n        <footer className=\"Cart__footer\">\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Subtotal</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.subtotalPrice}</span>\n            </div>\n          </div>\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Taxes</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.totalTax}</span>\n            </div>\n          </div>\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Total</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.totalPrice}</span>\n            </div>\n          </div>\n          <button className=\"Cart__checkout button\" onClick={this.openCheckout}>Checkout</button>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Cart;\n","import React, {Component} from 'react';\nimport { graphql } from 'react-apollo';\nimport * as compose from 'lodash.flowright';\n\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\n\nclass CustomerAuth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      nonFieldErrorMessage: null,\n      emailErrorMessage: null,\n      passwordErrorMessage: null\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.createCustomerAccount = this.createCustomerAccount.bind(this);\n    this.resetErrorMessages = this.resetErrorMessages.bind(this);\n    this.resetInputFields = this.resetInputFields.bind(this);\n  }\n\n  static propTypes = {\n    customerCreate: PropTypes.func.isRequired,\n    customerAccessTokenCreate: PropTypes.func.isRequired,\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({[name]: value});\n  }\n\n  resetErrorMessages(){\n    this.setState({\n      nonFieldErrorMessage: null,\n      emailErrorMessage: null,\n      passwordErrorMessage: null\n    });\n  }\n\n  resetInputFields(){\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n\n  handleSubmit(email, password){\n    this.resetErrorMessages();\n    if (this.props.newCustomer) {\n      this.createCustomerAccount(email, password)\n    } else {\n      this.loginCustomerAccount(email, password)\n    }\n  }\n\n  createCustomerAccount(email, password){\n    const input = {\n      email: email,\n      password: password\n    }\n    this.props.customerCreate(\n      { variables: { input }\n      }).then((res) => {\n        if (res.data.customerCreate.customer){\n           this.props.closeCustomerAuth();\n           this.props.showAccountVerificationMessage();\n        } else {\n          res.data.customerCreate.userErrors.forEach(function (error) {\n            if (error.field) {\n              this.setState({\n                [error.field + \"ErrorMessage\"]: error.message\n              });\n            } else {\n              this.setState({\n                nonFieldErrorMessage: error.message\n              });\n            }\n          }.bind(this));\n        }\n    });\n  }\n\n  loginCustomerAccount(email, password){\n    const input = {\n      email: email,\n      password: password\n    }\n    this.props.customerAccessTokenCreate(\n      { variables: { input }\n      }).then((res) => {\n      if (res.data.customerAccessTokenCreate.customerAccessToken) {\n        this.props.associateCustomerCheckout(res.data.customerAccessTokenCreate.customerAccessToken.accessToken);\n      } else {\n        res.data.customerAccessTokenCreate.userErrors.forEach(function (error) {\n          if (error.field != null) {\n            this.setState({\n              [error.field + \"ErrorMessage\"]: error.message\n            });\n          } else {\n            this.setState({\n              nonFieldErrorMessage: error.message\n            });\n          }\n        }.bind(this));\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className={`CustomerAuth ${this.props.isCustomerAuthOpen ? 'CustomerAuth--open' : ''}`}>\n        <button\n          onClick={() => { this.props.closeCustomerAuth(); this.resetErrorMessages(); this.resetInputFields();}}\n          className=\"CustomerAuth__close\">\n          ×\n        </button>\n        <div className=\"CustomerAuth__body\">\n          <h2 className=\"CustomerAuth__heading\">{this.props.newCustomer ? 'Create your Account' : 'Log in to your account'}</h2>\n          {this.state.nonFieldErrorMessage &&\n            <div className=\"error\">{this.state.nonFieldErrorMessage}</div>\n          }\n          <label className=\"CustomerAuth__credential\">\n            <input className=\"CustomerAuth__input\" type=\"email\" placeholder=\"Email\" name={\"email\"} value={this.state.email} onChange={this.handleInputChange}></input>\n            {this.state.emailErrorMessage &&\n              <div className=\"error\">{this.state.emailErrorMessage}</div>\n            }\n          </label>\n          <label className=\"CustomerAuth__credential\">\n            <input className=\"CustomerAuth__input\" type=\"password\" placeholder=\"Password\" name={\"password\"} value={this.state.password} onChange={this.handleInputChange}></input>\n            {this.state.passwordErrorMessage &&\n              <div className=\"error\">{this.state.passwordErrorMessage}</div>\n            }\n          </label>\n          <button className=\"CustomerAuth__submit button\" type=\"submit\" onClick={() => this.handleSubmit(this.state.email, this.state.password)}>{this.props.newCustomer ? 'Create Account' : 'Log in'}</button>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nconst customerCreate = gql`\n  mutation customerCreate($input: CustomerCreateInput!) {\n    customerCreate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n      customer {\n        id\n      }\n    }\n  }\n`;\n\nconst customerAccessTokenCreate = gql`\n  mutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {\n    customerAccessTokenCreate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n    }\n  }\n`;\n\nconst CustomerAuthWithMutation = compose(\n  graphql(customerCreate, {name: \"customerCreate\"}),\n  graphql(customerAccessTokenCreate, {name: \"customerAccessTokenCreate\"})\n)(CustomerAuth);\n\nexport default CustomerAuthWithMutation;\n","import React from \"react\";\nimport { Flex, Box } from \"@rebass/grid/emotion\";\nimport { getImageUrl } from \"takeshape-routing\";\n\nconst WhoWeAre = ({ items }) => {\n  return (\n    <Flex className=\"homeSection whoweare\" alignItems=\"center\" flexWrap=\"wrap\">\n      {items.map(wwa => (\n        <Box width={[1, 1 / 3]} px={2}>\n          <div class=\"wwa-card card\">\n            <div class=\"card-body\">\n              <img\n                alt=\"\"\n                className=\"placeholderImg\"\n                src={getImageUrl(wwa.image.path)}\n              />\n              <h5 class=\"card-title wwa-header\">{wwa.title}</h5>\n              <p class=\"wwa-text \">{wwa.description}</p>\n            </div>\n          </div>\n        </Box>\n      ))}\n    </Flex>\n  );\n};\n\nexport default WhoWeAre;\n","import React from \"react\";\nimport { Flex, Box } from \"@rebass/grid/emotion\";\nimport { getImageUrl } from \"takeshape-routing\";\n\nimport \"./index.scss\";\n\nconst HowItWorks = ({ items }) => {\n  return (\n    <>\n      <Flex\n        className=\"howitworks\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n        frameBorder\n      >\n        <Box width={[1, 1 / 12]} px={2}>\n          <h1 className=\"step-number\">1</h1>\n        </Box>\n        <Box width={[1, 1 / 3]} px={2}>\n          <div className=\"hiw-card\">\n            <div class=\"\">\n              <img\n                alt=\"\"\n                className=\"howImage\"\n                src={getImageUrl(items[0].image.path)}\n              />\n            </div>\n          </div>\n        </Box>\n        <Box width={[1, 1 / 2]}>\n          <div className=\"hiw-card\">\n            <div class=\"\">\n              <h3 class=\"step-title\">{items[0].title}</h3>\n              <p className=\"step-desc\">{items[0].description}</p>\n            </div>\n          </div>\n        </Box>\n      </Flex>\n\n      <Flex\n        className=\"howitworks\"\n        alignItems=\"center\"\n        flexWrap=\"wrap-reverse\"\n        frameBorder\n      >\n        <Box width={[1, 1 / 12]} px={2}>\n          <h1 className=\"step-number\">2</h1>\n        </Box>\n        <Box width={[1, 1 / 2]} px={2}>\n          <div className=\"hiw-card\">\n            <div class=\"\">\n              <h3 class=\"step-title\">{items[1].title}</h3>\n              <p className=\"step-desc\">{items[1].description}</p>\n            </div>\n          </div>\n        </Box>\n        <Box width={[1, 1 / 3]}>\n          <div className=\"hiw-card\">\n            <div class=\"\">\n              <img\n                alt=\"\"\n                className=\"howImage\"\n                src={getImageUrl(items[1].image.path)}\n              />\n            </div>\n          </div>\n        </Box>\n      </Flex>\n      <Flex\n        className=\"howitworks\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n        frameBorder\n      >\n        <Box width={[1, 1 / 12]} px={2}>\n          <h1 className=\"step-number\">3</h1>\n        </Box>\n        <Box width={[1, 1 / 3]} px={2}>\n          <div className=\"hiw-card\">\n            <div class=\"\">\n              <img\n                alt=\"\"\n                className=\"howImage\"\n                src={getImageUrl(items[2].image.path)}\n              />\n            </div>\n          </div>\n        </Box>\n        <Box width={[1, 1 / 2]}>\n          <div className=\"hiw-card card\">\n            <div class=\"card-body\">\n              <h3 class=\"step-title\">{items[2].title}</h3>\n              <p className=\"step-desc\">{items[2].description}</p>\n            </div>\n          </div>\n        </Box>\n      </Flex>\n      <Flex\n        className=\"howitworks\"\n        alignItems=\"center\"\n        flexWrap=\"wrap-reverse\"\n        frameBorder\n      >\n        <Box width={[1, 1 / 12]} px={2}>\n          <h1 className=\"step-number\">4</h1>\n        </Box>\n        <Box width={[1, 1 / 2]} px={2}>\n          <div className=\"hiw-card\">\n            <div class=\"\">\n              <h3 class=\"step-title\">{items[3].title}</h3>\n              <p className=\"step-desc\">{items[3].description}</p>\n            </div>\n          </div>\n        </Box>\n        <Box width={[1, 1 / 3]}>\n          <div className=\"hiw-card\">\n            <div class=\"\">\n              <img\n                alt=\"\"\n                className=\"howImage\"\n                src={getImageUrl(items[3].image.path)}\n              />\n            </div>\n          </div>\n        </Box>\n      </Flex>\n    </>\n  );\n};\n\nexport default HowItWorks;\n","import React from \"react\";\nimport { Flex, Box } from \"@rebass/grid/emotion\";\nimport { getImageUrl } from \"takeshape-routing\";\nimport Container from \"react-bootstrap/Container\";\n\nconst Partners = ({ items }) => {\n  return (\n    <Container>\n      <Flex\n        className=\"homeSection howitworks\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        {items.map(step => (\n          <Box width={[1, 1 / 2, 1 / 4]} px={2}>\n            <img\n              alt=\"\"\n              className=\"partnerImage\"\n              src={getImageUrl(step.logo.path)}\n            />\n          </Box>\n        ))}\n      </Flex>\n    </Container>\n  );\n};\n\nexport default Partners;\n","import React, { Component } from \"react\";\nimport { Flex, Box } from \"@rebass/grid/emotion\";\nimport Container from \"react-bootstrap/Container\"\nimport \"../Footer/footer.scss\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"footer\">\n          <footer className=\"container-fluid\">\n            <Container>\n              <Flex>\n                <Box width={1 / 2}>\n                  <span>Nomix Life Sciences</span>\n                  <br />\n                  <span>Copyright 2019</span>\n                </Box>\n                <Box width={1 / 2}></Box>\n              </Flex>\n            </Container>\n          </footer>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { Flex, Box } from \"@rebass/grid/emotion\";\nimport WhoWeAre from \"./components/SectionComponents/WhoWeAre\";\nimport HowItWorks from \"./components/SectionComponents/HowItWorks\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Product from \"./Product\";\nimport Partners from \"./components/Partners/Partners\";\n\nimport Header from \"./components/Header/Header\";\n\nimport Footer from \"./components/Footer/Footer\";\n\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\nconst howItWorksQuery = gql`\n  {\n    getHowItWorks {\n      repeater {\n        image {\n          _id\n          path\n        }\n        title\n        description\n      }\n    }\n  }\n`;\n\nconst wwaQuery = gql`\n  {\n    getWhoWeAre {\n      repeater {\n        image {\n          _id\n          path\n        }\n        description\n        title\n      }\n    }\n  }\n`;\n\nconst partners = gql`\n  {\n    getPartnerLogos {\n      _id\n      repeater {\n        logo {\n          _id\n          caption\n          credit\n          description\n          filename\n          mimeType\n          path\n          sourceUrl\n          title\n          uploadStatus\n        }\n      }\n    }\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <div className=\"network-image\">\n        <Flex className=\"hero container\" alignItems=\"center\">\n          <Box className=\"hero-text\">\n            <Container>\n              <h1 className=\"main-header-text\">\n                Find the clinical trial that works for you\n              </h1>\n              <br />\n              <h3>You are unique. Your treatment should be unique too.</h3>\n              <h3>\n                Nomix looks at your biomarkers and health history to match you\n                to a clinical trial.\n              </h3>\n            </Container>\n          </Box>\n        </Flex>\n      </div>\n      <Flex\n        className=\"container homeSection\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Box>\n          <h1 className=\"sectionHeader\">\n            <span>How it works</span>\n          </h1>\n          <Query query={howItWorksQuery}>\n            {({ loading, error, data }) => {\n              if (loading) return \"\";\n              if (error) return `Error! ${error.message}`;\n              return <HowItWorks items={data.getHowItWorks.repeater} />;\n            }}\n          </Query>\n        </Box>\n      </Flex>\n      <div className=\"wwa-background\">\n        <Flex\n          className=\"container homeSection\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Box>\n            <Query query={wwaQuery}>\n              {({ loading, error, data }) => {\n                if (loading) return \"\";\n                if (error) return `Error! ${error.message}`;\n                return <WhoWeAre items={data.getWhoWeAre.repeater} />;\n              }}\n            </Query>{\" \"}\n          </Box>\n        </Flex>\n      </div>\n      <div className=\"orderKit\">\n        <Flex className=\"\" justifyContent=\"center\">\n          <Box>\n            <p className=\"orderText\">\n              Nomix makes finding the right trial easy. Start by ordering our\n              at-home collection kit <br /> and answering a few short questions.\n            </p>\n\n            <br />\n            <br />\n\n            <Button href=\"/order\" className=\"order-kit-cta-large\">\n              <span>ORDER KIT</span>\n            </Button>\n          </Box>\n        </Flex>\n      </div>\n      <Query query={partners}>\n        {({ loading, error, data }) => {\n          if (loading) return \"\";\n          if (error) return `Error! ${error.message}`;\n          return <Partners items={data.getPartnerLogos.repeater} />;\n        }}\n      </Query>{\" \"}\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nconst httpLink = createHttpLink({\n  uri: \"https://nomixlifesciences.myshopify.com/api/graphql\"\n});\n\nconst middlewareLink = setContext(() => ({\n  headers: {\n    \"X-Shopify-Storefront-Access-Token\": \"5724938aa62ad4772b6ac1dd21d9ffce\"\n  }\n}));\n\nconst shop = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport default shop;\n","import React, { Component } from \"react\";\nimport shop from \"./ShopifyClient\";\nimport { ApolloProvider } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./Product.scss\";\n\nconst productQuery = gql`\n  {\n    shop {\n      name\n      products(first: 1) {\n        edges {\n          node {\n            id\n            title\n            options {\n              id\n              name\n              values\n            }\n            variants(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  id\n                  title\n                  selectedOptions {\n                    name\n                    value\n                  }\n                  image {\n                    src\n                  }\n                  price\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default class Product extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <Query client={shop} query={productQuery}>\n          {({ loading, error, data }) => {\n            if (loading) return \"\";\n            if (error) return `Error! ${error.message}`;\n            return (\n              <div className=\"container shop\">\n                <div className=\"card\">\n                  {/* <h1>{data.shop.products.edges[0].node.title}</h1>\n                  <img alt=\"\" src={data.shop.products.edges[0].image.src} /> */}\n                </div>\n              </div>\n            );\n          }}\n        </Query>\n        <Footer />\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport \"../Header/header.scss\";\nimport Logo from \"../../images/nomix-logo-02.png\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Product from \"../../Product\";\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = () => {\n  return (\n    <Navbar collapseOnSelect bg=\"light\" expand=\"lg\" fixed=\"top\">\n      <Container>\n        <Navbar.Brand href=\"/\">\n          <img className=\"logo-image\" alt=\"logo\" src={Logo} />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\"></Nav>\n          <Nav>\n            <Nav.Link className=\"main-nav-link hovernav\" href=\"/about\">\n              <span>ABOUT US</span>\n            </Nav.Link>\n            <Nav.Link\n              className=\"main-nav-link hovernav\"\n              href=\"https://match.nomixls.com/login\"\n            >\n              <span>SIGN-IN</span>\n            </Nav.Link>\n            <Nav.Link className=\"main-nav-link hovernav\"></Nav.Link>\n            <Nav.Link className=\"nav-order-button hover-button\" href=\"/order\">\n              <span>ORDER KIT</span>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import gql from 'graphql-tag';\n\nconst CheckoutFragment = gql`\n  fragment CheckoutFragment on Checkout {\n    id\n    webUrl\n    totalTax\n    subtotalPrice\n    totalPrice\n    lineItems (first: 250) {\n      edges {\n        node {\n          id\n          title\n          variant {\n            id\n            title\n            image {\n              src\n            }\n            price\n          }\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const createCheckout = gql`\n  mutation checkoutCreate ($input: CheckoutCreateInput!){\n    checkoutCreate(input: $input) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsAdd = gql`\n  mutation checkoutLineItemsAdd ($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {\n    checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsUpdate = gql`\n  mutation checkoutLineItemsUpdate ($checkoutId: ID!, $lineItems: [CheckoutLineItemUpdateInput!]!) {\n    checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsRemove = gql`\n  mutation checkoutLineItemsRemove ($checkoutId: ID!, $lineItemIds: [ID!]!) {\n    checkoutLineItemsRemove(checkoutId: $checkoutId, lineItemIds: $lineItemIds) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutCustomerAssociate = gql`\n  mutation checkoutCustomerAssociate($checkoutId: ID!, $customerAccessToken: String!) {\n    checkoutCustomerAssociate(checkoutId: $checkoutId, customerAccessToken: $customerAccessToken) {\n      userErrors {\n        field\n        message\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport function addVariantToCart(variantId, quantity){\n  this.props.checkoutLineItemsAdd(\n    { variables: { checkoutId: this.state.checkout.id, lineItems:  [{variantId, quantity: parseInt(quantity, 10)}] }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsAdd.checkout\n    });\n  });\n\n  this.handleCartOpen();\n}\n\nexport function updateLineItemInCart(lineItemId, quantity){\n  this.props.checkoutLineItemsUpdate(\n    { variables: { checkoutId: this.state.checkout.id, lineItems: [{id: lineItemId, quantity: parseInt(quantity, 10)}] }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsUpdate.checkout\n    });\n  });\n}\n\nexport function removeLineItemInCart(lineItemId){\n  this.props.checkoutLineItemsRemove(\n    { variables: { checkoutId: this.state.checkout.id, lineItemIds: [lineItemId] }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsRemove.checkout\n    });\n  });\n}\n\nexport function associateCustomerCheckout(customerAccessToken){\n  this.props.checkoutCustomerAssociate(\n    { variables: { checkoutId: this.state.checkout.id, customerAccessToken: customerAccessToken }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutCustomerAssociate.checkout,\n      isCustomerAuthOpen: false\n    });\n  });\n}\n","import React, { Component } from \"react\";\nimport Product from \"./components/Product\";\nimport Cart from \"./components/Cart\";\nimport CustomerAuthWithMutation from \"./components/CustomerAuth\";\nimport PropTypes from \"prop-types\";\nimport * as compose from \"lodash.flowright\";\nimport \"./shop.scss\";\n\nimport \"./cart.scss\";\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\n\nimport Container from \"react-bootstrap/Container\";\nimport { graphql } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport {\n  createCheckout,\n  checkoutLineItemsAdd,\n  checkoutLineItemsUpdate,\n  checkoutLineItemsRemove,\n  checkoutCustomerAssociate,\n  addVariantToCart,\n  updateLineItemInCart,\n  removeLineItemInCart,\n  associateCustomerCheckout\n} from \"./checkout\";\n\nclass Shop extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isCartOpen: false,\n      isCustomerAuthOpen: false,\n      isNewCustomer: false,\n      products: [],\n      checkout: { lineItems: { edges: [] } }\n    };\n\n    this.handleCartClose = this.handleCartClose.bind(this);\n    this.handleCartOpen = this.handleCartOpen.bind(this);\n    this.openCustomerAuth = this.openCustomerAuth.bind(this);\n    this.closeCustomerAuth = this.closeCustomerAuth.bind(this);\n    this.addVariantToCart = addVariantToCart.bind(this);\n    this.updateLineItemInCart = updateLineItemInCart.bind(this);\n    this.removeLineItemInCart = removeLineItemInCart.bind(this);\n    this.showAccountVerificationMessage = this.showAccountVerificationMessage.bind(\n      this\n    );\n    this.associateCustomerCheckout = associateCustomerCheckout.bind(this);\n  }\n\n  componentWillMount() {\n    this.props\n      .createCheckout({\n        variables: {\n          input: {}\n        }\n      })\n      .then(res => {\n        this.setState({\n          checkout: res.data.checkoutCreate.checkout\n        });\n      });\n  }\n\n  static propTypes = {\n    data: PropTypes.shape({\n      loading: PropTypes.bool,\n      error: PropTypes.object,\n      shop: PropTypes.object\n    }).isRequired,\n    createCheckout: PropTypes.func.isRequired,\n    checkoutLineItemsAdd: PropTypes.func.isRequired,\n    checkoutLineItemsUpdate: PropTypes.func.isRequired\n  };\n\n  handleCartOpen() {\n    this.setState({\n      isCartOpen: true\n    });\n  }\n\n  handleCartClose() {\n    this.setState({\n      isCartOpen: false\n    });\n  }\n\n  openCustomerAuth(event) {\n    if (event.target.getAttribute(\"data-customer-type\") === \"new-customer\") {\n      this.setState({\n        isNewCustomer: true,\n        isCustomerAuthOpen: true\n      });\n    } else {\n      this.setState({\n        isNewCustomer: false,\n        isCustomerAuthOpen: true\n      });\n    }\n  }\n\n  showAccountVerificationMessage() {\n    this.setState({ accountVerificationMessage: true });\n    setTimeout(() => {\n      this.setState({\n        accountVerificationMessage: false\n      });\n    }, 5000);\n  }\n\n  closeCustomerAuth() {\n    this.setState({\n      isCustomerAuthOpen: false\n    });\n  }\n\n  render() {\n    if (this.props.data.loading) {\n      return <p>Loading ...</p>;\n    }\n    if (this.props.data.error) {\n      return <p>{this.props.data.error.message}</p>;\n    }\n\n    return (\n      <>\n        <Header />\n        <div className=\"App shop-page\">\n          <header className=\"App__header\">\n            {!this.state.isCartOpen && (\n              <div className=\"App__view-cart-wrapper\">\n                <button\n                  className=\"App__view-cart\"\n                  onClick={() => this.setState({ isCartOpen: true })}\n                >\n                  Cart\n                </button>\n              </div>\n            )}\n          </header>\n          <div className=\"Product-wrapper\">\n            <Container>\n              <h1 className=\"about-header sectionHeader order-kit-headline\">\n                <span>Order Kit</span>\n              </h1>\n\n              {this.props.data.shop.products.edges.map(product => (\n                <Product\n                  addVariantToCart={this.addVariantToCart}\n                  checkout={this.state.checkout}\n                  key={product.node.id.toString()}\n                  product={product.node}\n                />\n              ))}\n            </Container>\n          </div>\n          <Cart\n            removeLineItemInCart={this.removeLineItemInCart}\n            updateLineItemInCart={this.updateLineItemInCart}\n            checkout={this.state.checkout}\n            isCartOpen={this.state.isCartOpen}\n            handleCartClose={this.handleCartClose}\n            customerAccessToken={this.state.customerAccessToken}\n          />\n        </div>\n\n        <Footer className=\"order-footer\" />\n      </>\n    );\n  }\n}\n\nconst query = gql`\n  query query {\n    shop {\n      name\n      description\n      products(first: 20) {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            title\n            options {\n              id\n              name\n              values\n            }\n            variants(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  id\n                  title\n                  selectedOptions {\n                    name\n                    value\n                  }\n                  image {\n                    src\n                  }\n                  price\n                }\n              }\n            }\n            images(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst AppWithDataAndMutation = compose(\n  graphql(query),\n  graphql(createCheckout, { name: \"createCheckout\" }),\n  graphql(checkoutLineItemsAdd, { name: \"checkoutLineItemsAdd\" }),\n  graphql(checkoutLineItemsUpdate, { name: \"checkoutLineItemsUpdate\" }),\n  graphql(checkoutLineItemsRemove, { name: \"checkoutLineItemsRemove\" }),\n  graphql(checkoutCustomerAssociate, { name: \"checkoutCustomerAssociate\" })\n)(Shop);\n\nexport default AppWithDataAndMutation;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../components/Header/Header\";\nimport Footer from \"../components/Footer/Footer\";\nimport { Flex, Box } from \"@rebass/grid/emotion\";\nimport \"../pages/about.scss\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { getImageUrl } from \"takeshape-routing\";\n\nconst aboutQuery = gql`\n  {\n    getAboutPage {\n      _id\n      about {\n        aboutDescription\n        aboutTitle\n      }\n      aboutImage {\n        _id\n        caption\n        credit\n        description\n        filename\n        mimeType\n        path\n        sourceUrl\n        title\n        uploadStatus\n      }\n      faq {\n        faq\n        faqDescription\n      }\n    }\n  }\n`;\n\nexport default class About extends Component {\n  render() {\n    return (\n      <Query query={aboutQuery} className=\"about-page\">\n        {({ loading, error, data }) => {\n          if (loading) return \"\";\n          if (error) return `Error! ${error.message}`;\n          return (\n            <>\n              <Header />\n              <div className=\"about-content container\">\n                <div className=\"header-name\">\n                  <h1 className=\"about-header sectionHeader\">\n                    <span>About Us</span>\n                  </h1>\n                </div>\n\n                <Flex\n                  alignItems=\"center\"\n                  flexWrap=\"wrap\"\n                  justifyContent=\"center\"\n                  frameBorder\n                >\n                  <Box width={[1, 1 / 2]}>\n                    {data.getAboutPage.about.map(about => (\n                      <div className=\"about-sub\">\n                        <h3 className=\"about-header\">{about.aboutTitle}</h3>\n                        <div className=\"aboutDescription\">\n                          <p>{about.aboutDescription}</p>\n                        </div>\n                      </div>\n                    ))}\n                  </Box>\n                  <Box width={[1, 1 / 2]}>\n                    <img\n                      className=\"about-image\"\n                      src={getImageUrl(data.getAboutPage.aboutImage.path)}\n                    />\n                  </Box>\n                </Flex>\n\n                <div className=\"FAQ-title\">\n                  <h1 className=\"sectionHeader about-header\">\n                    <span>FAQ</span>\n                  </h1>\n                </div>\n\n                <Flex\n                  alignItems=\"flex-start\"\n                  flexWrap=\"wrap\"\n                  justifyContent=\"center\"\n                  frameBorder\n                >\n                  {data.getAboutPage.faq.map(faq => (\n                    <Box my={0} width={[1, 1 / 2]}>\n                      {\" \"}\n                      <div className=\"faq-sub\">\n                        <h2 className=\"about-header\">{faq.faq}</h2>\n                        <div className=\"faqText\">\n                          <Flex\n                            className=\"description\"\n                            justifyContent=\"top\"\n                            alignItems=\"flex-start\"\n                          >\n                            <p>{faq.faqDescription}</p>\n                          </Flex>\n                        </div>\n                      </div>\n                    </Box>\n                  ))}\n                </Flex>\n                <div className=\"contact-number\">\n                  <p>\n                    <mark class=\"blue\">Still have more questions?</mark>\n                    <mark class=\"gray\">Contact support at</mark>\n                    <mark class=\"blue\">1234567890</mark>\n                  </p>\n                </div>\n              </div>\n              <Footer />\n            </>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Shop from \"./Shop\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nimport About from \"../src/pages/About\";\n\nimport { ApolloProvider } from \"react-apollo\";\n\nconst httpLink = createHttpLink({\n  uri: \"https://nomixlifesciences.myshopify.com/api/graphql\"\n});\n\nconst middlewareLink = setContext(() => ({\n  headers: {\n    \"X-Shopify-Storefront-Access-Token\": \"5724938aa62ad4772b6ac1dd21d9ffce\"\n  }\n}));\n\nconst cache = new InMemoryCache();\n\nconst TAKESHAPE_BASE_URL =\n  \"https://api.takeshape.io/project/1571a551-c3a7-4818-83f2-777769cf4339/graphql\";\n\nconst link1 = new HttpLink({\n  uri: TAKESHAPE_BASE_URL,\n  headers: {\n    authorization: `Bearer 833c58badcfa45b9a5deaf7066be1a41`\n  }\n});\n\nconst link2 = new HttpLink({\n  uri: \"https://nomixlifesciences.myshopify.com/api/graphql\",\n  headers: {\n    \"X-Shopify-Storefront-Access-Token\": \"5724938aa62ad4772b6ac1dd21d9ffce\"\n  }\n});\n\nconst client2 = new ApolloClient({\n  link: link1,\n  cache\n});\n\nconst client = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\">\n        <ApolloProvider client={client2}>\n          <App />\n        </ApolloProvider>{\" \"}\n      </Route>\n      <Route exact path=\"/order\">\n        <ApolloProvider client={client}>\n          <Shop />\n        </ApolloProvider>\n      </Route>\n\n      <Route exact path=\"/about\">\n        <ApolloProvider client={client2}>\n          <About />\n        </ApolloProvider>\n      </Route>\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}