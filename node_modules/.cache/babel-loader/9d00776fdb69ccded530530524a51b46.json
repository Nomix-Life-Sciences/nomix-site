{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport PropTypes from 'prop-types';\nimport { space, color, layout, typography, flexbox, border, background, position, grid, shadow, buttonStyle, textStyle, colorStyle } from 'styled-system';\nexport var propType = PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array, PropTypes.object]);\nexport var createPropTypes = function createPropTypes(props) {\n  return props.reduce(function (acc, name) {\n    var _extends2;\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[name] = propType, _extends2));\n  }, {});\n};\nexport default {\n  space: createPropTypes(space.propNames),\n  color: createPropTypes(color.propNames),\n  layout: createPropTypes(layout.propNames),\n  typography: createPropTypes(typography.propNames),\n  flexbox: createPropTypes(flexbox.propNames),\n  border: createPropTypes(border.propNames),\n  background: createPropTypes(background.propNames),\n  position: createPropTypes(position.propNames),\n  grid: createPropTypes(grid.propNames),\n  shadow: createPropTypes(shadow.propNames),\n  buttonStyle: createPropTypes(buttonStyle.propNames),\n  textStyle: createPropTypes(textStyle.propNames),\n  colorStyle: createPropTypes(colorStyle.propNames)\n};","map":null,"metadata":{},"sourceType":"module"}